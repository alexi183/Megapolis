{"version":3,"sources":["img/edit.svg","img/delete.svg","img/close.svg","actions/PostAction.js","container/Post/Post.js","container/Posts/Posts.js","reducers/PostReducer.js","stores/store.js","index.js"],"names":["module","exports","__webpack_require__","p","url","Post","_this$props","this","props","id","title","num","removePost","react_default","a","createElement","className","src","edit","alt","onClick","remove","Component","connect","Posts","state","modal","toggle","_this","setState","prevState","handleChange","e","Object","defineProperty","target","name","value","sendPost","_callee","regenerator_default","wrap","_context","prev","next","preventDefault","addPost","getData","stop","_this2","data","isFetching","closeBtn","close","Button","outline","color","Modal","isOpen","fade","ModalHeader","ModalBody","onSubmit","type","onChange","Spinner","undefined","length","Table","bordered","map","item","i","container_Post_Post","assign","key","post","dispatch","axios","get","then","response","payload","catch","error","note","console","log","actions","INITIAL_STATE","isFetched","PostReducer","arguments","action","_objectSpread","reducer","combineReducers","postReducer","store","createStore","applyMiddleware","promise","reduxThunk","logger","root","document","getElementById","ReactDOM","render","es","container_Posts_Posts"],"mappings":"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","file":"static/js/main.5b2adeaa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/edit.0d59e66e.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.6d5f731f.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.520fee83.svg\";","import axios from \"axios\"\r\nconst url = 'https://test.megapolis-it.ru/api/list'\r\n\r\nexport const GET_DATA_PENDING = 'GET_DATA_PENDING'\r\nexport const GET_DATA_SUCCESS = 'GET_DATA_SUCCESS'\r\nexport const GET_DATA_REJECT = 'GET_DATA_REJECT'\r\n\r\nexport const getData = () => {\r\n   return (dispatch) => {\r\n      dispatch({\r\n         type: GET_DATA_PENDING\r\n      })\r\n\r\n      axios.get(url).then((response) => {\r\n         dispatch({\r\n            type: GET_DATA_SUCCESS,\r\n            payload: response.data\r\n         })\r\n         // console.log('response-', response);\r\n      })\r\n          .catch((error) => {\r\n             dispatch({\r\n                type: GET_DATA_REJECT,\r\n                payload: error\r\n             })\r\n          })\r\n   }\r\n}\r\n\r\nexport const ADD_POST_START = 'ADD_POST_START'\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS'\r\nexport const ADD_POST_REJECT = 'ADD_POST_REJECT'\r\n\r\nexport const addPost = (title) => {\r\n   return (dispatch) => {\r\n      dispatch({\r\n         type: ADD_POST_START\r\n      })\r\n\r\n      /*   const postId = () => getState().post.data.data.length\r\n         console.log('postLength-' , postId);*/\r\n\r\n      const note = {\r\n         // id: +Math.max(postId() + 1),\r\n         title: title\r\n      }\r\n\r\n      axios.post(url, note).then(response => {\r\n         console.log(response)\r\n         dispatch({\r\n            type: ADD_POST_SUCCESS\r\n         })\r\n      } )\r\n\r\n      /* .then(func)*/\r\n          .catch((error) => {\r\n             dispatch({\r\n                type: ADD_POST_REJECT,\r\n                payload: error\r\n             })\r\n          });\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\nexport const EDIT_POST = 'EDIT_POST'\r\n\r\nexport const editPost = (id) => ({\r\n   type: EDIT_POST,\r\n   payload: id\r\n});\r\n\r\n\r\nexport const REMOVE_POST = 'REMOVE_POST'\r\n\r\nexport const removePost = (id) => ({\r\n   type: REMOVE_POST,\r\n   payload: id\r\n});\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport './Post.scss'\r\nimport edit from \"../../img/edit.svg\"\r\nimport remove from \"../../img/delete.svg\"\r\nimport * as actions from \"../../actions/PostAction\"\r\nimport {connect} from \"react-redux\";\r\n\r\nconst id = 760;\r\n\r\nclass Post extends Component {\r\n\r\n   /* state = {\r\n       productsItemShow: false\r\n    }\r\n\r\n    openBlock = () => {\r\n       this.setState({\r\n          productsItemShow: true\r\n       })\r\n    }\r\n\r\n    closeBlock = () => {\r\n       this.setState({\r\n          productsItemShow: false\r\n       })\r\n    }\r\n\r\n    handleClick = (id) => {\r\n\r\n       this.openBlock()\r\n    }*/\r\n\r\n   render() {\r\n\r\n      const {id, title, num, removePost} = this.props\r\n\r\n     /* console.log(id);*/\r\n\r\n\r\n\r\n      return (\r\n          <tr className=\"table-row\">\r\n             <td className=\"table-cell\">Задача № {num+1}</td>\r\n             <td className=\"table-cell\">{title}</td>\r\n             <td className=\"table-cell user-bar\">\r\n                <img className=\"edit\"\r\n                    src={edit} alt='Редактировать'/>\r\n                <img\r\n                    className=\"remove\"\r\n                    onClick={() => removePost(id)}\r\n                    src={remove}\r\n                    alt='Удалить' />\r\n             </td>\r\n          </tr>\r\n      )\r\n   }\r\n}\r\n\r\n\r\n/*\r\nconst mapStateToProps = state => {\r\n   return {\r\n      productTypes: state.post.productTypes\r\n   };\r\n};\r\n*/\r\n\r\n\r\n/*const mapDispatchToProps = dispatch => {\r\n   return {\r\n    /!*  removeProducts : () => dispatch(actions.removeProducts())*!/\r\n   }\r\n};*/\r\n\r\n\r\nexport default connect(\r\n   /* mapStateToProps,*/\r\n    /* mapDispatchToProps*/\r\n)(Post);\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react'\r\nimport {connect} from \"react-redux\"\r\nimport * as actions from \"../../actions/PostAction\"\r\nimport Post from \"../Post/Post\"\r\nimport close from \"../../img/close.svg\"\r\nimport {Button, Modal, ModalBody, ModalHeader, Spinner, Table} from 'reactstrap';\r\nimport './Posts.scss'\r\n\r\nconst url = 'https://test.megapolis-it.ru/api/list';\r\nconst id2 = 769;\r\n\r\nclass Posts extends Component {\r\n\r\n   state = {\r\n      modal: false,\r\n      title: ''\r\n   };\r\n\r\n   componentDidMount() {\r\n      this.props.getData()\r\n   }\r\n\r\n   toggle = () => {\r\n      this.setState(prevState => ({\r\n         modal: !prevState.modal\r\n      }));\r\n   }\r\n\r\n   handleChange = (e) => {\r\n      this.setState({\r\n         [e.target.name] : e.target.value\r\n      })\r\n   }\r\n\r\n   /*sendPost = (e) => {\r\n      e.preventDefault()\r\n     /!* this.props.getData()*!/\r\n      axios.post(url, this.state.title).\r\n      then (\r\n          this.props.getData()\r\n      )\r\n          .catch((error) => {\r\n             console.log(error)\r\n          });\r\n   }*/\r\n\r\n\r\n      sendPost = async (e) => {\r\n         e.preventDefault()\r\n         this.props.addPost(this.state.title)\r\n         await this.props.getData()\r\n      }\r\n\r\n\r\n   // removePost = (id) => {\r\n   //\r\n   //      axios.delete(`url/${id}`).\r\n   //          then (\r\n   //              this.props.getData()\r\n   //          )\r\n   //          .catch((error) => {\r\n   //             console.log(error)\r\n   //          });\r\n   //   }\r\n\r\n   render() {\r\n\r\n      const {data, isFetching} = this.props\r\n\r\n      const {title} = this.state\r\n\r\n      const closeBtn = <button className=\"close\" onClick={this.toggle}>\r\n         <img src={close} alt=\"close\" />\r\n      </button>;\r\n\r\n      return (\r\n          <div className=\"container\">\r\n             <h1>Список задач</h1>\r\n\r\n             <div className=\"action-bar d-flex justify-content-end mb-4\">\r\n                <Button onClick={this.toggle} outline color=\"success\">Добавить</Button>\r\n\r\n                <Button outline color=\"success\">Удалить</Button>\r\n\r\n                <Modal isOpen={this.state.modal} fade={false} toggle={this.toggle}>\r\n                   <ModalHeader  close={closeBtn}>\r\n                      Modal title\r\n                   </ModalHeader>\r\n                   <ModalBody>\r\n                      <form onSubmit={this.sendPost}>\r\n                         <input\r\n                             type=\"text\"\r\n                             name=\"title\"\r\n                             onChange={this.handleChange}\r\n                             value={title}\r\n                         />\r\n\r\n                         <Button type=\"submit\"\r\n                                 color=\"primary\"\r\n                                 onClick={this.toggle}\r\n                         >Отправить</Button>\r\n                      </form>\r\n                   </ModalBody>\r\n                </Modal>\r\n\r\n             </div>\r\n\r\n             {(isFetching) ?\r\n                 <Spinner className=\"spinner-border_modify\" /> :\r\n\r\n                 data !== undefined && data.length ?\r\n                     <Table bordered>\r\n                        <tbody>\r\n                        {\r\n                           data.map((item, i) =>\r\n                               <Post {...item}\r\n                                     removePost={this.removePost}\r\n                                     key={item.id}\r\n                                     num={i} />\r\n                           )}\r\n                        </tbody>\r\n                     </Table>\r\n                     : <div className=\"message\">Список задач пуст</div>\r\n             }\r\n          </div>\r\n      )\r\n   }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n   return {\r\n      data: state.post.data.data,\r\n      isFetching: state.post.isFetching\r\n   }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return {\r\n      getData: () => dispatch(actions.getData()),\r\n      addPost: (title) => dispatch(actions.addPost(title))\r\n   }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Posts)\r\n","import * as actions from '../actions/PostAction';\r\n\r\nconst INITIAL_STATE = {\r\n   data: [],\r\n   title: '',\r\n   isFetching: false,\r\n   isFetched: false,\r\n   error: null\r\n}\r\n\r\nconst PostReducer = (state = INITIAL_STATE, action) => {\r\n\r\n   switch (action.type) {\r\n\r\n      case actions.GET_DATA_PENDING:\r\n         return {\r\n            ...state,\r\n            isFetching: true\r\n         }\r\n\r\n      case actions.GET_DATA_REJECT:\r\n         return {\r\n            ...state,\r\n            isFetching: true,\r\n            error: action.payload\r\n         }\r\n\r\n      case actions.GET_DATA_SUCCESS:\r\n\r\n         /*let productTypes = action.payload.filter(items => items.ParentID === null)*/\r\n\r\n         return {\r\n            ...state,\r\n            isFetching: false,\r\n            isFetched: true,\r\n            data: action.payload\r\n         }\r\n\r\n      case actions.ADD_POST_START:\r\n         return {\r\n            ...state,\r\n            isFetching: true\r\n         }\r\n\r\n      case actions.ADD_POST_SUCCESS:\r\n         return {\r\n            ...state,\r\n            isFetching: false,\r\n            isFetched: true,\r\n            title: action.title\r\n         }\r\n\r\n\r\n      case actions.ADD_POST_REJECT:\r\n         return {\r\n            ...state,\r\n            isFetching: true,\r\n            error: action.payload\r\n         }\r\n\r\n\r\n      default: {\r\n         return state;\r\n      }\r\n   }\r\n};\r\n\r\nexport default PostReducer;\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport promise from 'redux-promise-middleware';\r\nimport postReducer from '../reducers/PostReducer';\r\n\r\nconst reducer = combineReducers({\r\n   post: postReducer\r\n});\r\n\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    applyMiddleware(promise, reduxThunk, logger));\r\n\r\nexport default store;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport ProductPage from './container/Posts/Posts';\nimport store from './stores/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nlet root = document.getElementById('root');\n\nReactDOM.render(\n    <Provider store={store}>\n       <ProductPage />\n    </Provider>\n    , root\n);\n\n\n\n\n\n\n\n"],"sourceRoot":""}